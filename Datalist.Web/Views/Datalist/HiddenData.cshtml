@model PersonModel
@{
    ViewBag.Title = "Datalist hidden data";
}

<div class="row">
    <div class="col-md-6">
        <div class="example content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-bars"></i>
                    Autocomplete
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
                    @Html.TextBox("HiddenAutocompleteId", null, new { @class = "form-control centered-content", placeholder = "Hidden ID" })
                    <br />
                    @Html.TextBox("AdditionalAutocompleteWorkingData", null, new { @class = "form-control centered-content", placeholder = "Additional working data" })
                    <br />
                    @Html.AutoCompleteFor(model => model.Id, new PeopleAutocomplete())
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="example content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-bars"></i>
                    Autocomplete + Datalist
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
                    @Html.TextBox("HiddenDatalistId", null, new { @class = "form-control centered-content", placeholder = "Hidden ID" })
                    <br />
                    @Html.TextBox("AdditionalDatalistWorkingData", null, new { @class = "form-control centered-content", placeholder = "Additional working data" })
                    <br />
                    @Html.DatalistFor(model => model.Id, new PeopleDatalist())
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    View
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
@@model <span class="cls">PersonModel</span>

@@Html.TextBox(<span class="str">"HiddenId"</span>)
        
@@Html.TextBox(<span class="str">"AdditionalIsWorking"</span>)

@@Html.AutocompleteFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleDatalist</span>())

$(<span class="str">'.datalist-input'</span>).datalist({
    select: <span class="kwrd">function</span> (event, element, hiddenElement, data) {    
        $(<span class="str">'#AdditionalIsWorking'</span>).val(data[<span class="str">'IsWorking'</span>]);
        $(<span class="str">'#HiddenId'</span>).val(data[<span class="str">'Id'</span>]);    
    }
});
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    View
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
@@model <span class="cls">PersonModel</span>

@@Html.TextBox(<span class="str">"HiddenId"</span>)
        
@@Html.TextBox(<span class="str">"AdditionalIsWorking"</span>)

@@Html.DatalistFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleDatalist</span>())

$(<span class="str">'.datalist-input'</span>).datalist({
    select: <span class="kwrd">function</span> (event, element, hiddenElement, data) {    
        $(<span class="str">'#AdditionalIsWorking'</span>).val(data[<span class="str">'IsWorking'</span>]);
        $(<span class="str">'#HiddenId'</span>).val(data[<span class="str">'Id'</span>]);  
    }
});
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    Controller
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
<span class="kwd">public class</span> <span class="cls">HomeController</span> : <span class="cls">Controller</span>
{
    <span class="kwd">private</span> <span class="cls">DbContext</span> Context { <span class="kwd">get</span>; }

    <span class="kwd">public</span> HomeController(<span class="cls">DbContext</span> context)
    {    
        Context = context;
    }

    [<span class="cls">HttpGet</span>]
    <span class="kwd">public</span> <span class="cls">ActionResult</span> Index()
    {
        <span class="kwd">return</span> View();
    }
        
    [<span class="cls">HttpGet</span>]
    <span class="kwd">public</span> <span class="cls">JsonResult</span> Default(<span class="cls">DatalistFilter</span> filter)
    {
        <span class="kwd">return</span> Json(<span class="kwd">new</span> <span class="cls">PeopleDatalist</span>(Context) { Filter = filter }.GetData(),
           <span class="cls">JsonRequestBehavior</span>.AllowGet);
    }
}
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="example-code content-block">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa fa-code"></i>
                    PeopleDatalist
                    <span class="widget-buttons">
                        <i class="content-toggle"></i>
                    </span>
                </div>
                <div class="widget-content">
<pre>
<code>
<span class="kwd">public class</span> <span class="cls">PeopleDatalist</span> : <span class="cls">MvcDatalist</span>&lt;<span class="cls">PersonModel</span>&gt;
{
    <span class="kwd">private</span> <span class="cls">DbContext</span> Context { <span class="kwd">get</span>; }

    <span class="kwd">public</span> PeopleDatalist(<span class="cls">DbContext</span> context)
    {
        Context = context;
    }
    <span class="kwd">public</span> PeopleDatalist()
    {
        Url = <span class="str">"Default"</span>;
    }

    <span class="kwd">public override</span> <span class="cls">IQueryable</span>&lt;<span class="cls">PersonModel</span>&gt; GetModels()
    {
        <span class="kwd">return</span> Context.Set&lt;<span class="cls">PersonModel</span>&gt;();
    }

    <span class="kwd">public override void</span> AddData(<span class="cls">Dictionary</span>&lt;<span class="cls">String</span>, <span class="cls">String</span>&gt; row, <span class="cls">PersonModel</span> model)
    {
        <span class="kwd">base</span>.AddData(row, model);

        row.Add(<span class="str">"IsWorking"</span>, GetIsWorkingStringFromBoolean(model.IsWorking));
    }
}

<span class="kwd">public class</span> <span class="cls">PersonModel</span>
{
    [<span class="cls">DatalistColumn</span>(Hidden = <span class="kwd">true</span>)]
    <span class="kwd">public</span> <span class="cls">Int32</span> Id { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">DatalistColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Name"</span>)]
    <span class="kwd">public</span> <span class="cls">String</span> Name { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">DatalistColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Surname"</span>)]
    <span class="kwd">public</span> <span class="cls">String</span> Surname { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">DatalistColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Age"</span>)]
    <span class="kwd">public</span> <span class="cls">Int32</span> Age { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">DatalistColumn</span>(Format = <span class="str">"{0:d}"</span>)]
    [<span class="cls">Display</span>(Name = <span class="str">"Birthday"</span>, ShortName = <span class="str">"Birth"</span>)]
    <span class="kwd">public</span> <span class="cls">DateTime</span> Birthday { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    <span class="kwd">public</span> <span class="cls">Boolean</span>? IsWorking { <span class="kwd">get</span>; <span class="kwd">set</span>; }
}
</code>
</pre>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
<script>
    $($('.datalist-input')[0]).datalist({
        select: function (event, element, hiddenElement, data) {
            $('#AdditionalAutocompleteWorkingData').val(data['IsWorking']);
            $('#HiddenAutocompleteId').val(data['Id']);
        }
    });
    $($('.datalist-input')[1]).datalist({
        select: function (event, element, hiddenElement, data) {
            $('#AdditionalDatalistWorkingData').val(data['IsWorking']);
            $('#HiddenDatalistId').val(data['Id']);
        }
    });
</script>
}