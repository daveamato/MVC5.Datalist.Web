@{
    ViewBag.Title = "Datalist hidden data";
}

<div class="row">
    <div class="widget example col-xl-6">
        <div class="widget-header">
            <div class="fa fa-bars"></div>
            <span>Autocomplete</span>
        </div>
        <div class="widget-content">
            <div class="row">
                <div class="col-6">
                    @Html.TextBox("AutocompleteId", null, new { @class = "form-control text-center", placeholder = "Person id", @readonly = "readonly" })
                </div>
                <div class="col-6">
                    @Html.TextBox("AutocompleteWorking", null, new { @class = "form-control text-center", placeholder = "Employment status", @readonly = "readonly" })
                </div>
            </div>

            <br />

            @Html.AutoComplete("Autocomplete", new PeopleDatalist())
        </div>
    </div>
    <div class="widget example col-xl-6">
        <div class="widget-header">
            <div class="fa fa-bars"></div>
            <span>Datalist</span>
        </div>
        <div class="widget-content">
            <div class="row">
                <div class="col-6">
                    @Html.TextBox("DatalistId", null, new { @class = "form-control text-center", placeholder = "Person id", @readonly = "readonly" })
                </div>
                <div class="col-6">
                    @Html.TextBox("DatalistWorking", null, new { @class = "form-control text-center", placeholder = "Employment status", @readonly = "readonly" })
                </div>
            </div>

            <br />

            @Html.Datalist("Datalist", new PeopleDatalist())
        </div>
    </div>
</div>

<div class="row">
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>View</span>
        </div>
        <div class="widget-content">
<pre>
<code>@@Html.TextBox(<span class="str">"PersonId"</span>)
@@Html.TextBox(<span class="str">"PersonIsWorking"</span>)
@@Html.AutoCompleteFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleDatalist</span>())</code>
</pre>
        </div>
    </div>
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>View</span>
        </div>
        <div class="widget-content">
<pre>
<code>@@Html.TextBox(<span class="str">"PersonId"</span>)
@@Html.TextBox(<span class="str">"PersonIsWorking"</span>)
@@Html.DatalistFor(model => model.Id, <span class="kwd">new</span> <span class="cls">PeopleDatalist</span>())</code>
</pre>
        </div>
    </div>
</div>

<div class="row">
    <div class="widget code col-xl-12">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Javascript</span>
        </div>
        <div class="widget-content">
<pre>
<code><span class="kwd">new</span> <span class="cls">MvcDatalist</span>(document.getElementById(<span class="str">'Id'</span>), {
    events: {
        select: function (data, triggerChanges) {
            document.getElementById(<span class="str">'PersonIsWorking'</span>).value = data.length ? data[0].IsWorking : <span class="str">''</span>;
            document.getElementById(<span class="str">'PersonId'</span>).value = data.length ? data[0].Id : <span class="str">''</span>;
        }
    }
});</code>
</pre>
        </div>
    </div>
</div>

<div class="row">
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Datalist</span>
        </div>
        <div class="widget-content">
<pre>
<code><span class="kwd">public class</span> <span class="cls">PeopleDatalist</span> : <span class="cls">MvcDatalist</span>&lt;<span class="cls">Person</span>&gt;
{
    <span class="kwd">private</span> <span class="cls">DbContext</span> Context { <span class="kwd">get</span>; }

    <span class="kwd">public</span> PeopleDatalist(<span class="cls">DbContext</span> context)
    {
        Context = context;
    }
    <span class="kwd">public</span> PeopleDatalist()
    {
        Url = <span class="str">"AllPeople"</span>;
    }

    <span class="kwd">public override</span> <span class="cls">IQueryable</span>&lt;<span class="cls">Person</span>&gt; GetModels()
    {
        <span class="kwd">return</span> Context.Set&lt;<span class="cls">Person</span>&gt;();
    }

    <span class="kwd">public override void</span> FormData(<span class="cls">Person</span> model)
    {
        <span class="cls">Dictionary</span>&lt;<span class="cls">String</span>, <span class="cls">String</span>&gt; data = <span class="kwd">base</span>.FormData(model);

        data[<span class="str">"IsWorking"</span>] = GetIsWorkingStringFromBoolean(model.IsWorking);

        <span class="kwd">return</span> data;
    }
}</code>
</pre>
        </div>
    </div>
    <div class="widget code col-xl-6">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Model</span>
        </div>
        <div class="widget-content">
<pre>
<code><span class="kwd">public class</span> <span class="cls">Person</span>
{
    [<span class="cls">DatalistColumn</span>(Hidden = <span class="kwd">true</span>)]
    <span class="kwd">public</span> <span class="cls">Int32</span> Id { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">DatalistColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Name"</span>)]
    <span class="kwd">public</span> <span class="cls">String</span> Name { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">DatalistColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Surname"</span>)]
    <span class="kwd">public</span> <span class="cls">String</span> Surname { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">DatalistColumn</span>]
    [<span class="cls">Display</span>(Name = <span class="str">"Income"</span>)]
    <span class="kwd">public</span> <span class="cls">Int32</span> Income { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    [<span class="cls">Display</span>(Name = <span class="str">"Birthday"</span>)]
    [<span class="cls">DatalistColumn</span>(Format = <span class="str">"{0:d}"</span>)]
    <span class="kwd">public</span> <span class="cls">DateTime</span> Birthday { <span class="kwd">get</span>; <span class="kwd">set</span>; }

    <span class="kwd">public</span> <span class="cls">Boolean</span>? IsWorking { <span class="kwd">get</span>; <span class="kwd">set</span>; }
}</code>
</pre>
        </div>
    </div>
</div>

@section scripts {
    <script>
        new MvcDatalist(document.getElementById('Autocomplete'), {
            events: {
                select: function (data, triggerChanges) {
                    document.getElementById('AutocompleteWorking').value = data.length ? data[0].IsWorking : '';
                    document.getElementById('AutocompleteId').value = data.length ? data[0].Id : '';
                }
            }
        });
        new MvcDatalist(document.getElementById('Datalist'), {
            events: {
                select: function (data, triggerChanges) {
                    document.getElementById('DatalistWorking').value = data.length ? data[0].IsWorking : '';
                    document.getElementById('DatalistId').value = data.length ? data[0].Id : '';
                }
            }
        });
    </script>
}
