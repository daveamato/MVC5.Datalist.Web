@{
    ViewBag.Title = "DatalistData.Columns";
}

<div class="panel panel-default">
    <div class="panel-heading">Columns</div>
    <div class="panel-body">
        <strong>Description</strong>
        <pre>Dictionary for keeping visible datalist column key and header values.</pre>
        <strong>Defaults</strong>
        <pre><span class="kwrd">new</span> <a href="/Datalist/API/DatalistColumns">DatalistColumns</a>() instance.</pre>
        <strong>Remarks</strong>
        <pre>The idea is to have these columns equal to <a href="/Datalist/API/AbstractDatalist">AbstractDatalist</a>.<a href="/Datalist/API/AbstractDatalist/Columns">Columns</a>, unless less columns are to be rendered, <strong>but not more</strong>.</pre>
        <strong>Examples</strong>
        <pre>This is how <a href="/Datalist/API/DatalistData">DatalistData</a>.Columns could be filled with data.
There will be two visible columns with keys <span class="str">"FirstName"</span> and <span class="str">"LastName"</span>,
which will have headers <span class="str">"First name"</span> and <span class="str">"Last name"</span> rescpetively.

<span class="kwrd">protected</span> <span class="kwrd">override</span> <a href="/Datalist/API/DatalistData">DatalistData</a> FormDatalistData(<span class="cls">IQueryable</span>&lt;<span class="cls">UserModel</span>&gt; models)
{
    <span class="kwrd">var</span> data = <span class="kwrd">new</span> <a href="/Datalist/API/DatalistData">DatalistData</a>();
    data.FilteredRecords = models.Count();
    data.Columns.Add(<span class="kwrd">new</span> <a href="/Datalist/API/DatalistColumn">DatalistColumn</a>(<span class="str">"FirstName"</span>, <span class="str">"First name"</span>));
    data.Columns.Add(<span class="kwrd">new</span> <a href="/Datalist/API/DatalistColumn">DatalistColumn</a>(<span class="str">"LastName"</span>, <span class="str">"Last name"</span>));

    <span class="kwrd">var</span> pagedModels = models
        .Skip(CurrentFilter.Page * CurrentFilter.RecordsPerPage)
        .Take(CurrentFilter.RecordsPerPage);

    <span class="kwrd">foreach</span> (<span class="cls">UserModel</span> model <span class="kwrd">in</span> pagedModels)
    {
        <span class="kwrd">var</span> row = <span class="kwrd">new</span> <span class="cls">Dictionary</span>&lt;<span class="cls">String</span>, <span class="cls">String</span>&gt;();
        row.Add(IdKey, model.Id);
        row.Add(AcKey, <span class="cls">String</span>.Format(<span class="str">"{0} {1}"</span>, model.FirstName, model.LastName));
        row.Add(<span class="str">"FirstName"</span>, model.FirstName);
        row.Add(<span class="str">"LastName"</span>, model.LastName);
        row.Add(<span class="str">"AdditionalData"</span>, <span class="str">"Additional data"</span>);

        data.Rows.Add(row);
    }

    <span class="kwrd">return</span> data;
}</pre>
        @Html.Datalist("Columns1", null, new DatalistDataDatalist())
    </div>
</div>